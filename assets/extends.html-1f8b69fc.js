import{_ as n,o as s,c as a,b as t}from"./app-a46f6870.js";const p={},o=t(`<h1 id="继承的2种实现方式" tabindex="-1"><a class="header-anchor" href="#继承的2种实现方式" aria-hidden="true">#</a> 继承的2种实现方式</h1><p>实现继承需要满足的3个<code>必要</code>要求：</p><ul><li>子类可以访问父类的属性和方法</li><li><code>instanceof</code>行为正确</li><li><code>construct</code>指向正确</li></ul><p>其他需要满足的可选条件：</p><ul><li>实例化子类时，可以传递参数给父构造函数</li></ul><h2 id="组合继承" tabindex="-1"><a class="header-anchor" href="#组合继承" aria-hidden="true">#</a> 组合继承</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">Device</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>model<span class="token punctuation">,</span> weight<span class="token punctuation">,</span> battery<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 型号</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>model <span class="token operator">=</span> model
    <span class="token comment">// 重量</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>weight <span class="token operator">=</span> weight
    <span class="token comment">// 电池容量</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>battery <span class="token operator">=</span> battery
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">introduce</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[{model: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>model<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, weight: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>weight<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, battery: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>battery<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">modifyModel</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>model<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>model <span class="token operator">=</span> model
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">introduce</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">Airport</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>position<span class="token punctuation">,</span> model<span class="token punctuation">,</span> weight<span class="token punctuation">,</span> battery<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Device</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> model<span class="token punctuation">,</span> weight<span class="token punctuation">,</span> battery<span class="token punctuation">)</span>
    <span class="token comment">// 机场位置</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>position <span class="token operator">=</span> position
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">fly</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;机场&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">sendSignal</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>uav<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;向无人机:&#39;</span> <span class="token operator">+</span> uav <span class="token operator">+</span> <span class="token string">&#39;发送信号&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Airport<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Device</span><span class="token punctuation">(</span><span class="token string">&#39;DJIxxxx-xxxx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;98kg&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;60%&#39;</span><span class="token punctuation">)</span>
Airport<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> Airport
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点" aria-hidden="true">#</a> 缺点</h3><ul><li>需要调用两次父类的构造函数</li></ul><h2 id="寄生组合继承" tabindex="-1"><a class="header-anchor" href="#寄生组合继承" aria-hidden="true">#</a> 寄生组合继承</h2><p>将上述修改为<code>寄生组合继承</code>只需要将<code>new Device</code>修改为<code>Object.create(Device.prototype)</code></p><p><code>Object.create()</code>做了哪些操作呢？</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">object</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">function</span> <span class="token constant">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span> <span class="token comment">// 新的构造函数</span>
    <span class="token constant">F</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> obj<span class="token punctuation">;</span>    <span class="token comment">// 继承传入的参数obj</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">F</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 返回新的函数对象    </span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),e=[o];function c(i,l){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","extends.html.vue"]]);export{k as default};
