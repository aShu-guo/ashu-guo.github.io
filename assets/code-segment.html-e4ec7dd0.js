import{_ as n,o as s,c as a,b as t}from"./app-a46f6870.js";const e={},p=t(`<blockquote><p>Cache</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/*
 缓存fn执行的值，适用于单一入参、纯函数
 将内存中的值与入参比较，如果相同则取内存中的值，反之执行函数取值
 cache结构：{入参1:出参1, 入参2:出参2}
*/</span>
<span class="token keyword">function</span> <span class="token function">cached</span> <span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> cache <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">cachedFn</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> hit <span class="token operator">=</span> cache<span class="token punctuation">[</span>str<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> hit <span class="token operator">||</span> <span class="token punctuation">(</span>cache<span class="token punctuation">[</span>str<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

<span class="token comment">//ex:</span>
<span class="token keyword">function</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> name<span class="token punctuation">}</span>
<span class="token keyword">let</span> cachedFn<span class="token operator">=</span><span class="token function">cached</span><span class="token punctuation">(</span>hello<span class="token punctuation">)</span>
<span class="token function">cachedFn</span><span class="token punctuation">(</span><span class="token string">&#39;tom tim&#39;</span><span class="token punctuation">)</span>
<span class="token function">cachedFn</span><span class="token punctuation">(</span><span class="token string">&#39;tom tim&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 缓存后会直接取值，不再执行fn，提高性能</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>三元表达式优化</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 如果存在则赋属性值，反之则指向空对象的属性值</span>

<span class="token comment">// vue源码</span>
<span class="token punctuation">(</span>clone<span class="token punctuation">.</span>devtoolsMeta <span class="token operator">=</span> clone<span class="token punctuation">.</span>devtoolsMeta <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>renderContext <span class="token operator">=</span> renderContext<span class="token punctuation">;</span>
<span class="token punctuation">(</span>clone<span class="token punctuation">.</span>devtoolsMeta <span class="token operator">||</span> <span class="token punctuation">(</span>clone<span class="token punctuation">.</span>devtoolsMeta<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>renderContext <span class="token operator">=</span> renderContext<span class="token punctuation">;</span>

<span class="token comment">// 自己实现</span>
clone<span class="token punctuation">.</span>devtoolsMeta <span class="token operator">?</span> clone<span class="token punctuation">.</span>devtoolsMeta<span class="token punctuation">.</span>renderContext <span class="token operator">=</span> renderContext <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">.</span>renderContext <span class="token operator">=</span> renderContext<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),o=[p];function c(l,i){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","code-segment.html.vue"]]);export{r as default};
