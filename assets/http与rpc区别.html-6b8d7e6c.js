import{_ as e,r as t,o,c as p,a as n,d as s,e as r,b as c}from"./app-a46f6870.js";const l={},i=n("h2",{id:"rpc",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#rpc","aria-hidden":"true"},"#"),s(" RPC")],-1),k={href:"https://en.wikipedia.org/wiki/Distributed_object_communication",target:"_blank",rel:"nofollow noopener noreferrer"},u=c(`<blockquote><p>服务调用过程</p></blockquote><p>客户端 --阻塞--&gt; 服务端 --响应执行结果--&gt; 客户端</p><blockquote><p>组成</p></blockquote><p><code>RPC</code> 架构里的四个核心的组件:</p><ol><li><p>客户端（Client），服务的调用方。</p></li><li><p>服务端（Server），真正的服务提供者。</p></li><li><p>客户端存根(Client Stub)，存放服务端的地址消息，再将客户端的请求参数打包成网络消息，然后通过网络远程发送给服务方。</p></li><li><p>服务端存根(Server Stub)，接收客户端发送过来的消息，将消息解包，并调用本地的方法。</p></li></ol><blockquote><p>支持<strong>同步调用</strong>和<strong>异步调用</strong></p></blockquote><blockquote><p>支持多种协议：Dubbo、TCP、hessian</p></blockquote><h2 id="http" tabindex="-1"><a class="header-anchor" href="#http" aria-hidden="true">#</a> HTTP</h2><blockquote><p>发展历程</p></blockquote><p>HTTP/1---1996---TCP/IP协议---一次性连接</p><p>HTTP/1.1---1997---TCP/IP协议---除非特殊声明，否则为持久连接</p><p>HTTP/2---2015---TCP/IP协议</p><p>HTTP/3---2022---QUIC+UDP协议</p><blockquote><p>HTTP/1.1</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>Accept<span class="token operator">-</span>Ranges<span class="token operator">:</span> bytes
<span class="token literal-property property">Connection</span><span class="token operator">:</span> keep<span class="token operator">-</span>alive
Content<span class="token operator">-</span>Length<span class="token operator">:</span> <span class="token number">1328</span>
Content<span class="token operator">-</span>Type<span class="token operator">:</span> text<span class="token operator">/</span>html<span class="token punctuation">;</span> charset<span class="token operator">=</span><span class="token constant">UTF</span><span class="token operator">-</span><span class="token number">8</span>
<span class="token literal-property property">Date</span><span class="token operator">:</span> Fri<span class="token punctuation">,</span> <span class="token number">15</span> Jul <span class="token number">2022</span> <span class="token number">02</span><span class="token operator">:</span><span class="token number">22</span><span class="token operator">:</span><span class="token number">59</span> <span class="token constant">GMT</span>
<span class="token literal-property property">ETag</span><span class="token operator">:</span> <span class="token constant">W</span><span class="token operator">/</span><span class="token string">&quot;530-jlbjCd48/D9yGTkCjkNdM+fHPzw&quot;</span>
Keep<span class="token operator">-</span>Alive<span class="token operator">:</span> timeout<span class="token operator">=</span><span class="token number">5</span>
<span class="token constant">X</span><span class="token operator">-</span>Powered<span class="token operator">-</span>By<span class="token operator">:</span> Express
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Connection: keep-alive</strong> 表示建立了一个持久连接，再次请求会复用</p><blockquote><p>HTTP/2 多路复用</p></blockquote><p><strong>HTTP/2是基于二进制“帧”的协议，HTTP/1.1是基于“文本分割”解析的协议。</strong></p><p>HTTP/1.1 需要通过换行符解析内容，而且传输内容长度是不可知的</p><p>HTTP/2 通过传入帧数据，服务端知道传输的长度</p><p><img src="https://image-static.segmentfault.com/126/067/1260679140-573002cec3232_fix732" alt="image-20220715105236045"></p><p><img src="https://www.sohamkamani.com/fd191e5f5c0030366117f9cecfbabfa4/interleaving.svg" alt="image-20220715105236045"></p>`,22);function d(b,m){const a=t("ExternalLinkIcon");return o(),p("div",null,[i,n("p",null,[s("在面向对象的编程范式中，RPC 表示为"),n("a",k,[s("远程方法调用"),r(a)]),s("(RMI)。RPC调用远程方法，编码就像是正常的 ( local) 过程调用，无需显式编码远程交互的细节。但通常它们并不相同，因此可以将本地调用与远程调用区分开来。远程调用通常比本地调用慢几个数量级且可靠性较低。")]),u])}const T=e(l,[["render",d],["__file","http与rpc区别.html.vue"]]);export{T as default};
