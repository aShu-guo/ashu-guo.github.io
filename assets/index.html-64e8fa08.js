const t=JSON.parse('{"key":"v-6ffc3f4b","path":"/base/ts/","title":"ts 入门","lang":"zh-CN","frontmatter":{"description":"鸭子类型 程序设计可以分为静态类型（编译时检查）和动态类型（运行时检查），而鸭子类型是静态类型的一种风格。关注的是属性和方法 的集合，而不是继承特定的类和实现特定的接口。 动态类型的编程语言只能依赖文档、`清晰的代码和测试来确保正常使用，代码的执行结果只有在运行之后才可以明确知道。 在ts中判断两个类型是否相同是根据它们的结构，如果结构相同便认为它们是...","head":[["link",{"rel":"canonical","href":"https://ashu-guo.github.io/vue-ecology/rfcs/base/ts/"}],["meta",{"property":"og:url","content":"https://ashu-guo.github.io/base/ts/"}],["meta",{"property":"og:site_name","content":"aShu_guo技术博客"}],["meta",{"property":"og:title","content":"ts 入门"}],["meta",{"property":"og:description","content":"鸭子类型 程序设计可以分为静态类型（编译时检查）和动态类型（运行时检查），而鸭子类型是静态类型的一种风格。关注的是属性和方法 的集合，而不是继承特定的类和实现特定的接口。 动态类型的编程语言只能依赖文档、`清晰的代码和测试来确保正常使用，代码的执行结果只有在运行之后才可以明确知道。 在ts中判断两个类型是否相同是根据它们的结构，如果结构相同便认为它们是..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-17T03:11:18.000Z"}],["meta",{"property":"article:author","content":"ashu_guo"}],["meta",{"property":"article:modified_time","content":"2023-07-17T03:11:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ts 入门\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-17T03:11:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ashu_guo\\",\\"url\\":\\"http://ashu-guo.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"鸭子类型","slug":"鸭子类型","link":"#鸭子类型","children":[]},{"level":2,"title":"类型擦除","slug":"类型擦除","link":"#类型擦除","children":[]},{"level":2,"title":"自动推断","slug":"自动推断","link":"#自动推断","children":[]},{"level":2,"title":"降级","slug":"降级","link":"#降级","children":[]}],"git":{"updatedTime":1689563478000,"contributors":[{"name":"aShu-guo","email":"guochengli97@163.com","commits":3}]},"filePathRelative":"base/ts/README.md","autoDesc":true,"copyright":{"author":"ashu_guo","license":"MIT"}}');export{t as data};
