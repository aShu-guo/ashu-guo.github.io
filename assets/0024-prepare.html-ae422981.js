import{_ as o,r as n,o as i,c as l,a as e,d as t,e as a,b as p}from"./app-a46f6870.js";const s="/imgs/vue-rfcs/attribute-vs-property.png",c={},u=p('<h1 id="准备篇" tabindex="-1"><a class="header-anchor" href="#准备篇" aria-hidden="true">#</a> 准备篇</h1><h2 id="attribute-与-property" tabindex="-1"><a class="header-anchor" href="#attribute-与-property" aria-hidden="true">#</a> attribute 与 property</h2><ul><li>从词源来看 <ul><li>attribute更偏向于解释为：将原本不属于自己的某个属性指派给自己（mdn翻译为标签属性）</li><li>property更偏向于解释为：与生俱来的属性（mdn翻译为属性）</li></ul></li><li>从是否可变来看 <ul><li>attribute更偏向于是不可变的，反映的是初始值，而且可以通过setAttribute &amp;&amp; getAttribute自定义</li><li>property更偏向于是可变的，反映的是当前值，但是不能自定义</li></ul></li></ul><blockquote><p>两者并不是一一映射的 <img src="'+s+'" alt="img.png"></p></blockquote><h2 id="两者在vue中的应用" tabindex="-1"><a class="header-anchor" href="#两者在vue中的应用" aria-hidden="true">#</a> 两者在vue中的应用</h2><p>props中声明的属性不是attribute也不是property，只有传入非props声明的属性时而且未设置<code>inheritAttrs: false</code>才会在添加到子组件的根节点上。</p><p>参考：</p>',7),d={href:"https://cn.vuejs.org/guide/components/attrs.html#disabling-attribute-inheritance",target:"_blank",rel:"nofollow noopener noreferrer"},h={href:"https://angular.cn/guide/binding-syntax#html-attribute-vs-dom-property",target:"_blank",rel:"nofollow noopener noreferrer"},_={href:"https://juejin.cn/post/6844903712721387534",target:"_blank",rel:"nofollow noopener noreferrer"};function b(f,m){const r=n("ExternalLinkIcon");return i(),l("div",null,[u,e("p",null,[t("[1] "),e("a",d,[t("vue-透传Attributes"),a(r)])]),e("p",null,[t("[2] "),e("a",h,[t("angular-HTML Attribute 和 DOM Property"),a(r)])]),e("p",null,[t("[3] "),e("a",_,[t("前端杂谈: Attribute VS Property"),a(r)])])])}const v=o(c,[["render",b],["__file","0024-prepare.html.vue"]]);export{v as default};
