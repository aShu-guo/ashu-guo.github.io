import{_ as t,r as s,o as d,c as r,a,d as e,e as c,b as n}from"./app-a46f6870.js";const i={},l=n(`<h1 id="移除keycode支持" tabindex="-1"><a class="header-anchor" href="#移除keycode支持" aria-hidden="true">#</a> 移除keycode支持</h1><h2 id="概要" tabindex="-1"><a class="header-anchor" href="#概要" aria-hidden="true">#</a> 概要</h2><ul><li>移除数值作为v-model修饰符的能力</li><li>移除<code>config.keyCodes</code></li></ul><h2 id="基础用例" tabindex="-1"><a class="header-anchor" href="#基础用例" aria-hidden="true">#</a> 基础用例</h2><p>N/A</p><h2 id="动机" tabindex="-1"><a class="header-anchor" href="#动机" aria-hidden="true">#</a> 动机</h2><p>在vue2中，v-on支持<code>KeyboardEvent.key</code>暴露的任意有效按键名转换为<code>kebab-case</code>来作为修饰符。例如，当event.key===&#39;PageDown&#39; 时才会触发handler</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">@keyup.page-down</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onArrowUp<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,8),h=a("code",null,"config.keyCodes",-1),p={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/KeyboardEvent/keyCode",target:"_blank",rel:"nofollow noopener noreferrer"},u=n('<h2 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点" aria-hidden="true">#</a> 缺点</h2><p>N/A</p><h2 id="可选的方案" tabindex="-1"><a class="header-anchor" href="#可选的方案" aria-hidden="true">#</a> 可选的方案</h2><p>N/A</p><h2 id="采取的策略" tabindex="-1"><a class="header-anchor" href="#采取的策略" aria-hidden="true">#</a> 采取的策略</h2><ul><li>提供一个可以探测出使用了数值的keyCode修饰符的代码，并且将它等价转换为key的代码模板</li><li>在兼容版本中，可以支持<code>config.keyCode</code>，在运行时如果匹配上了keyCode别名，则发出警告允许轻松迁移。</li></ul>',6);function k(_,f){const o=s("ExternalLinkIcon");return d(),r("div",null,[l,a("p",null,[e("因此，数值键盘码和"),h,e(" 功能与之重复。另外，"),a("a",p,[e("KeyboardEvent.keyCode"),c(o)]),e(" 已经被废弃了，Vue也应该停止支持。")]),u])}const b=t(i,[["render",k],["__file","0014-drop-keycode-support.html.vue"]]);export{b as default};
