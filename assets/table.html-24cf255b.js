import{_ as e,o as a,c as d,b as c}from"./app-a46f6870.js";const r="/imgs/problems/table-layout.png",o={},t=c('<h1 id="表单设计思考" tabindex="-1"><a class="header-anchor" href="#表单设计思考" aria-hidden="true">#</a> 表单设计思考</h1><p>本文主要探讨列表页面的一些交互逻辑，程序员是否需要处理的问题</p><h2 id="列表页面的常见布局" tabindex="-1"><a class="header-anchor" href="#列表页面的常见布局" aria-hidden="true">#</a> 列表页面的常见布局</h2><p>首先布局主要分为3个部分：参数部分、按钮部分以及列表展示部分。其中需要处理的有两个的地方：按钮部分以及列表中的分页部分</p><p><img src="'+r+'" alt="img.png"></p><h3 id="参数部分" tabindex="-1"><a class="header-anchor" href="#参数部分" aria-hidden="true">#</a> 参数部分</h3><p>其中参数部分主要分为两块：列表展示字段查询参数以及分页参数。当然还可能存在<code>过滤参数</code>、<code>排序参数</code> 。那么需要考虑的是如果用户点击分页组件跳转之后（例如：从第1页跳转到第4页），再次点击查询时是否需要重置分页参数？</p><p>我认为<code>此处不应当重置</code>页面参数。</p><p>但是观察遇到的项目发现，大多数都在此处重置了页面参数，大致可以通过两种方式处理：</p><ol><li>点击<code>查询</code>按钮请求接口时不传入页面参数</li><li>直接重置页面参数</li></ol><p>第二种方式更好一些，因为可以手动重置页面参数；第一种方式需要区分点击<code>查询</code>按钮请求以及其他请求。</p><h3 id="按钮部分" tabindex="-1"><a class="header-anchor" href="#按钮部分" aria-hidden="true">#</a> 按钮部分</h3><p>一般按钮部分常用参数部分放在一起，常见操作为：查询、重置。其中常见的处理方式：进入页面请求、点击重置以及查询按钮请求接口。</p><h3 id="列表展示部分" tabindex="-1"><a class="header-anchor" href="#列表展示部分" aria-hidden="true">#</a> 列表展示部分</h3><p>这部分主要考虑的分页组件的交互问题。假设这样一个场景：用户在参数部分设置了参数（例如：选中了下拉框中的某个值、选择了时间等），此时点击分页跳转时需要帮助用户处理参数么？</p><p>我认为<code>此处也不应当处理</code>，应由用户自行处理。</p><p>但是观察遇到的项目发现，大多数在此处并没有做任何处理。</p>',17),i=[t];function h(n,p){return a(),d("div",null,i)}const l=e(o,[["render",h],["__file","table.html.vue"]]);export{l as default};
