import{_ as e,o as t,c as o,b as a}from"./app-a46f6870.js";const c="/imgs/server/serialization.png",i={},s=a('<h1 id="序列化与反序列化" tabindex="-1"><a class="header-anchor" href="#序列化与反序列化" aria-hidden="true">#</a> 序列化与反序列化</h1><p>序列化是一个将对象转换为二进制流的过程，可以理解为对象的<code>&quot;快照&quot;</code>。</p><p>反序列化是将二进制流重新展开为对象的过程。</p><p>序列化和反序列化在分布式系统中很有用，因为可以保存对象的状态，并且可以通过网络传输。</p><p>需要注意的是在序列化时，应该将对象<code>&quot;快照&quot;</code>成一个共享的格式，并且格式与平台无关，以便可以在不同平台重新创建对象。</p><p>常用的格式是xml和json，当然为了减少空间，还有一些自定义格式。</p><p><img src="'+c+'" alt="img.png"></p>',7),r=[s];function n(p,_){return t(),o("div",null,r)}const l=e(i,[["render",n],["__file","serialization.html.vue"]]);export{l as default};
