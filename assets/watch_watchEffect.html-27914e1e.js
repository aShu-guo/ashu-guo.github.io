import{_ as t,o as e,c as a,b as c}from"./app-a46f6870.js";const h={},i=c('<h1 id="watch和watcheffect" tabindex="-1"><a class="header-anchor" href="#watch和watcheffect" aria-hidden="true">#</a> watch和watchEffect</h1><h2 id="watch" tabindex="-1"><a class="header-anchor" href="#watch" aria-hidden="true">#</a> watch</h2><ul><li>需要指定依赖源，依赖源改变时执行依赖回调，所以需要缩小依赖源时使用watch更好</li><li>依赖源与依赖回调<strong>无需强相关</strong></li><li>首次渲染时可执行（immediate:true）,也不不执行</li></ul><h2 id="watcheffect" tabindex="-1"><a class="header-anchor" href="#watcheffect" aria-hidden="true">#</a> watchEffect</h2><ul><li>会自动收集依赖回调函数中的依赖源</li><li>依赖源与依赖回调<strong>强相关</strong>时使用</li><li>首次渲染时会执行</li></ul><p>参考： [1] watch与watchEffect：https://www.zhihu.com/question/462378193</p>',6),r=[i];function f(l,n){return e(),a("div",null,r)}const o=t(h,[["render",f],["__file","watch_watchEffect.html.vue"]]);export{o as default};
