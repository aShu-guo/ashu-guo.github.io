import{_ as a,r as t,o,c,a as n,d as s,e as l,b as p}from"./app-a46f6870.js";const r={},i=p(`<h1 id="准备篇" tabindex="-1"><a class="header-anchor" href="#准备篇" aria-hidden="true">#</a> 准备篇</h1><h2 id="什么是render函数" tabindex="-1"><a class="header-anchor" href="#什么是render函数" aria-hidden="true">#</a> 什么是render函数？</h2><p>render函数是Vue提供的一种组件实现更加灵活的方式，可以实现动态DOM的效果，任意修改DOM的展示顺序。</p><p>render函数不仅可以返回VNodes也可以返回JSX（需要通过babel插件支持）</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">h</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中render函数有3个参数</p>`,6),d=n("li",null,[s("第一个参数是Vue内置的生成VNode的函数"),n("code",null,"createElement"),s("，一般简写为"),n("code",null,"h"),s("。")],-1),u=n("code",null,"props",-1),k=n("code",null,"事件处理器",-1),v=n("code",null,"原生DOM属性",-1),h={href:"https://v2.cn.vuejs.org/v2/guide/render-function.html#%E6%B7%B1%E5%85%A5%E6%95%B0%E6%8D%AE%E5%AF%B9%E8%B1%A1",target:"_blank",rel:"nofollow noopener noreferrer"},_=n("li",null,"第三个参数是需要传递的子组件，可以有多种形式：VNode数组、字符串、数值。",-1);function m(g,b){const e=t("ExternalLinkIcon");return o(),c("div",null,[i,n("ul",null,[d,n("li",null,[s("第二个参数是组件中相关的依赖："),u,s("、"),k,s("以及"),v,s(" 等。详细的对象结构可参考"),n("a",h,[s("官方文档"),l(e)]),s(" 。第二个参数不需要时可以省略。")]),_])])}const E=a(r,[["render",m],["__file","0008-prepare.html.vue"]]);export{E as default};
