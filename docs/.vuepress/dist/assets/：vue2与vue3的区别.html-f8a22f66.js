import{_ as a,p as n,q as s,a1 as t}from"./framework-1443a5b1.js";const e={},p=t(`<h2 id="vue2与vue3的区别" tabindex="-1"><a class="header-anchor" href="#vue2与vue3的区别" aria-hidden="true">#</a> vue2与vue3的区别</h2><p>1.v-bind的合并行为</p><p>Vue2：如果使用v-bind指令时同时绑定了一个相同属性名的property，那么后者会覆盖前者而且与顺序无关</p><p>Vue3：与绑定顺序有关，后面的会覆盖前面的</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>//vue2
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>textWrap<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-bind</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{&#39;class&#39;: !isMe}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
//最终效果
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>textWrap<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
//但是如果v-bind传入的参数则不会覆盖
&lt;div class=&quot;textWrap&quot; :class=&quot;{&#39;left&#39;:true, &#39;right&#39;:false}&quot;
  
//vue3
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>textWrap<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-bind</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{&#39;class&#39;: &#39;red&#39;}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
//最终效果
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>red<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.组合式api</p><p>3.生命周期的名称发生改变</p><p>beforeDestory -&gt; beforeUnmount</p><p>Destoryed -&gt; unmounted</p><blockquote><h4 id="响应式原理" tabindex="-1"><a class="header-anchor" href="#响应式原理" aria-hidden="true">#</a> 响应式原理</h4></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>vue2


vue3

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),l=[p];function u(c,o){return n(),s("div",null,l)}const d=a(e,[["render",u],["__file","：vue2与vue3的区别.html.vue"]]);export{d as default};
