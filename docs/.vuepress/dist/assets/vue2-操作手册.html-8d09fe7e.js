import{_ as n,p as a,q as s,a1 as t}from"./framework-1443a5b1.js";const e={},p=t(`<blockquote><p>属性绑定 🧵 v-bind</p></blockquote><p>可用于传递属性到子组件或者普通标签，简写为&quot;:&quot;</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token comment">&lt;!-- 全写 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isEdit ? &#39;active&#39; : &#39;inactive&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 简写 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isEdit ? &#39;active&#39; : &#39;inactive&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>事件监听 👂v-on</p></blockquote><p>用于监听事件传递，简写为&quot;@&quot;</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token comment">&lt;!-- 简写 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>clickHandler<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>编辑<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 简写 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>clickHandler<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>编辑<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>事件修饰符</p></li><li><p>native 触发原生事件（用于同名自定义事件、或者组件原生事件监听）</p></li><li><p>stop 阻止事件捕获或者冒泡（stopPropagation）</p></li><li><p>once 只触发一次事件回调</p></li><li><p>capture 表示使用捕获模式触发事件回调</p></li><li><p>prevent 阻止默认事件触发（preventDefault），但是事件仍会继续传递</p></li><li><p>passive 可用于优化滚动性能</p><ul><li>在事先不知道网络应用程序是否会取消滚动的情况下，Chrome 需要等待此 JavaScript 完成才能滚动页面本身。超过 80% 的触摸侦听器不会取消滚动并不必要地延迟滚动最多几秒钟。这会导致页面似乎没有固定在用户手指上的大量卡顿。</li></ul></li></ul><blockquote><p>passive listener 与 active listener</p></blockquote><p>passive listener:只倾听，不做回应 active listener:时刻保持警惕，并在触发时做出回应</p>`,9),l=[p];function c(i,o){return a(),s("div",null,l)}const v=n(e,[["render",c],["__file","vue2-操作手册.html.vue"]]);export{v as default};
