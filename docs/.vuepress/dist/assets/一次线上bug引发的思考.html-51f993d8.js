import{_ as n}from"./prod-bug-01-8c4e6e56.js";import{_ as s,p as a,q as t,a1 as e}from"./framework-1443a5b1.js";const p={},c=e('<blockquote><p>一次线上bug引发的思考（使用index作为key导致的问题）</p></blockquote><ul><li>场景：</li></ul><p>基于uniapp开发的无人机运送核酸的项目，在首页有一个列表来展示不同状态运单数据。 由于需要保证数据实时性，前端通过<code>setInterval</code>定时轮询<code>列表接口</code>来获取最新的数据。 获取到最新的数据之后，在运单list中遍历出每一个item，渲染出对应的卡片。 在卡片上有<code>重新申请</code>的操作，点击<code>重新申请</code>时会出现一个时间控件弹出层，让用户选择申请时间</p><p><img src="'+n+`" alt="img.png"></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token comment">&lt;!-- 简要代码 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(item,index) in list<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{item}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> Card <span class="token keyword">from</span> <span class="token string">&#39;./card.vue&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>Card<span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">list</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>首先说明在动态列表中仍要使用index作为key的原因：</p><p>项目时基于uniapp开发的，在进入列表页时，在钩子函数中请求接口获取数据。 但是拿到对应的list开始渲染时，如果使用运单号作为key，在<code>H5</code>端页面控制台没有报错信息，打包成<code>Android</code>包时，控制台报：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>TypeError: Invalid attempt to destructure non-iterable instance.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在uniapp官方社区搜索相关信息之后，用<code>index</code>做<code>key</code>可以解决上诉问题，谁成想这才是噩梦的开始。🤷‍♂️</p><p>在接下来的描述中，一定要记得前提条件时：使用<code>index</code>做<code>key</code></p><p>由于同一个无人机运行企业下面的成员可以看到的数据列表会存在相同的运单等待处理</p><p>假设A，B都所属于企业Y，那么运单号为xxxx的运单可能会同时存在于A，B的列表中，所会存在同时操作同一个运单的可能</p><p>复现步骤：</p><p>1.用户A操作运单号为xxxx的运单卡片，点击<code>重新申请</code>，弹出时间组件</p><p>2.与此同时，用户B点击<code>取消飞行</code>，这条数据在用户B的列表中消失，那么也意味着也会在用户A的列表中消失。</p><p>3.在用户A准备<code>重新申请</code>飞行时间时，此时有定时任务触发，列表数据更新了，对应的<code>index</code>也发生了改变</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>触发流程：

\`index\`改变 --&gt; 触发渲染watcher --&gt; diff比较新VDOM与旧VDOM（此时key发生了变化） --&gt; 触发重新渲染

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时时间组件处于展开状态，我们本想操作的是运单号为xxxx的运单，但是此时组件重新渲染了(重新实例化了一个新组件) ，相同index位置的数据发生了改变，变成了运单号为yyyy的数据，所以实际被操作的数据其实是运单号为yyyy的运单</p><p>所以为了解决上述出现的问题，又回到了原点，用<code>运单号</code>做key，再次打包之后又不报错了。🤷‍♂️</p><blockquote><p>拓展</p></blockquote><ul><li>diff</li></ul>`,21),o=[c];function l(i,u){return a(),t("div",null,o)}const k=s(p,[["render",l],["__file","一次线上bug引发的思考.html.vue"]]);export{k as default};
